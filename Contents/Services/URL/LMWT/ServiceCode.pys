import re, urlparse, cgi, urllib, urllib2, base64from BeautifulSoup import BeautifulSoupUSER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/534.51.22 (KHTML, like Gecko) Version/5.1.1 Safari/534.51.22'	def MetadataObjectForURL(url): 	#Log('In MetadataObjectForURL for LMWT (' + url + ')')		# Return bare minimum. This is never shown to users.	video = VideoClipObject(		title = 'LMWT Redirect Page',		summary = 'LMWT Redirect Page',		thumb = None,	)		return videodef MediaObjectsForURL(url):	#Log('In MediaObjectsForURL for LMWT')		# Return bare minimum. Don't do any work until user actually 	# selects the video so that we don't run any more requests	# against LMWT than we have to.	ret = []	provider_args = {}			# Extract out query string.	url_qs = urlparse.urlparse(url).query		# Break down quesry string...	qs_args = cgi.parse_qs(url_qs)		if ("provider_args" in qs_args.keys()):			# Extract out provider arguments by first getting encoded args....		provider_args_qs = urllib.unquote_plus(qs_args['provider_args'][0])				# ... and then decoding them.		provider_args = cgi.parse_qs(provider_args_qs)				# Finally, remove them from URL.		url = re.sub("[&?]provider_args=[^&]*","", url)				#Log(str(provider_args))		#Log(url)				provider_url = base64.b64decode(qs_args['url'][0])	return URLService.MediaObjectsForURL(provider_url)